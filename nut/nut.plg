<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name       "nut">
<!ENTITY author     "macester">
<!ENTITY version    "2015.08.22o">
<!ENTITY pluginURL  "https://raw.githubusercontent.com/macexx/plugins/master/nut/&name;.plg">
<!ENTITY pkgURL	    "https://raw.githubusercontent.com/macexx/plugins/master/pkgs/">
<!ENTITY path       "/boot/config/plugins/&name;">
<!ENTITY repository "https://raw.githubusercontent.com/macexx/plugins/master/nut/archive/">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" pluginURL="&pluginURL;">

<CHANGES>
###2015.08.22###
- Resolved first start error
- Help fixes
- Uninstall fixes
- Fix autorestart after upgrade
- Make USB drivers selectable

###2015.08.21###
- Initial Release
</CHANGES>


<!--
The 'pre-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
# Stop service
/etc/rc.d/rc.nut stop 2>/dev/null

# Remove old 'nut-package' file
rm -f $(ls &path;/&name;-201*.txz 2>/dev/null|grep -v '&version;')

# Remove old dependencies ???
echo ""
echo "-----------------------------------------------------------"
echo " Old Plugin &name; was removed"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>



<!--
dependency files
-->
<FILE Name="&path;/dependencies/expat-2.1.0-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;expat-2.1.0-x86_64-1.txz</URL>
</FILE>
<FILE Name="&path;/dependencies/freeipmi-1.4.8-x86_64-1gds.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;freeipmi-1.4.8-x86_64-1gds.txz</URL>
</FILE>
<FILE Name="&path;/dependencies/libtool-2.4.6-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;libtool-2.4.6-x86_64-1.txz</URL>
</FILE>
<FILE Name="&path;/dependencies/libusb-compat-0.1.5-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;libusb-compat-0.1.5-x86_64-1.txz</URL>
</FILE>
<FILE Name="&path;/dependencies/neon-0.29.6-x86_64-2.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;neon-0.29.6-x86_64-2.txz</URL>
</FILE>
<FILE Name="&path;/dependencies/net-snmp-5.7.3-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;net-snmp-5.7.3-x86_64-1.txz</URL>
</FILE>

<!--
The 'nut-package' file.
-->
<FILE Name="&path;/nut-2.7.3-x86_64-1gds.txz" Run="upgradepkg --install-new">
<URL>&pkgURL;nut-2.7.3-x86_64-1gds.txz</URL>
</FILE>



<!--
nut package
-->
<FILE Name="&path;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&repository;&name;-&version;.txz</URL>
</FILE>


<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
# Copy default config to persistent directory
[ ! -f &path;/&name;.cfg ] &amp;&amp; cp /usr/local/emhttp/plugins/&name;/default.cfg &path;/nut.cfg
[ ! -f &path;/VERSION ] &amp;&amp; touch &path;/VERSION

echo ""
echo "-----------------------------------------------------------"
echo " Plugin &name; is installed."
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
verupgrade=&version;
verboot=$( cat &path;/VERSION )
bootenable=$( grep -ic 'SERVICE="enable"' &path;/nut.cfg )
if (( $(echo "$verupgrade $verboot" | awk '{print ($1 == $2)}') )); then
  echo ""
  echo "-----------------------------------------------------------"
  echo " Versions Match, System will handle start of NUT..."
  echo "-----------------------------------------------------------"
  echo ""
else
  if [ $bootenable -eq 1 ]; then
    echo ""
    echo "-----------------------------------------------------------"
    echo " Upgrade done, NUT is restarting..."
    echo "-----------------------------------------------------------"
    echo ""
    echo $verupgrade > &path;/VERSION
    /etc/rc.d/rc.nut start
  else
    echo ""
    echo "-----------------------------------------------------------"
    echo " Upgrade done, NUT is not set to start in plugin settings"
    echo "-----------------------------------------------------------"
    echo ""
    echo $verupgrade > &path;/VERSION
  fi
fi
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
# Stop service
/etc/rc.d/rc.&name; stop

# Remove plugin related files
rm -rf /boot/config/plugins/&name;

# Uninstall the 'nut' packages
removepkg nut-2.7.3-x86_64-1gds.txz
removepkg &name;-&version;

echo ""
echo "-----------------------------------------------------------"
echo " Uninstalled Plugin &name;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

</PLUGIN>
